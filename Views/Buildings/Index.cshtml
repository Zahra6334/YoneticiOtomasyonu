@model IEnumerable<YoneticiOtomasyonu.Models.ViewModels.BuildingWithRoleViewModel>

    @{
    ViewData["Title"] = "Bina Yönetimi";
    Layout = "_Layout";
    }

    <div class="container-fluid">
        <div class="d-flex align-items-center justify-content-between mb-4">
            <h1 class="h3 mb-0 text-gray-800">Bina Yönetimi</h1>
            <div>
                <a asp-action="Create" class="btn btn-primary">
                    <i class="fas fa-plus mr-2"></i> Yeni Bina Ekle
                </a>
               
            </div>
        </div>

        <div class="row">
            @foreach (var item in Model)
        {
            <div class="col-xl-4 col-lg-6 col-md-6 mb-4">
                <div class="card building-card h-100 shadow-sm border-0">
                    <div class="card-img-container position-relative">
                        @if (!string.IsNullOrEmpty(item.Building.ImageUrl))
                        {
                        <img src="@item.Building.ImageUrl" class="card-img-top" alt="@item.Building.Name">
                        }
                        else
                        {
                        <div class="card-img-top bg-gradient-primary d-flex align-items-center justify-content-center">
                            <i class="fas fa-building fa-4x text-white"></i>
                        </div>
                        }
                        <div class="building-badge">
                            <span class="badge
                                @(item.Role == "Yönetici" ? "bg-success" :
                                  item.Role == "Kiracý" ? "bg-primary" :
                                  item.Role == "Görevli" ? "bg-info" : "bg-secondary")">
                                @item.Role
                            </span>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-start mb-2">
                            <h5 class="card-title mb-0">
                                @item.Building.Name
                                @if (!string.IsNullOrEmpty(item.Building.Block))
                                {
                                <span class="text-muted">(@item.Building.Block)</span>
                                }
                            </h5>
                            <span class="badge
                                @(item.Building.Type == "Apartman" ? "bg-primary" :
                                  item.Building.Type == "Site" ? "bg-success" :
                                  item.Building.Type == "Ýþ Merkezi" ? "bg-info" :
                                  item.Building.Type == "Rezidans" ? "bg-warning" : "bg-secondary")">
                                @item.Building.Type
                            </span>
                        </div>
                        <p class="card-text text-muted small mb-3">
                            <i class="fas fa-map-marker-alt mr-1"></i> @item.Building.Address
                        </p>

                        <div class="building-stats d-flex justify-content-between border-top pt-3">
                            <div class="text-center">
                                <div class="stat-value">@item.Building.FloorCount</div>
                                <div class="stat-label">Kat</div>
                            </div>
                            <div class="text-center">
                                <div class="stat-value">@item.Building.UnitCount</div>
                                <div class="stat-label">Birim</div>
                            </div>
                            <div class="text-center">
                                <div class="stat-value">@item.Building.CreatedAt.ToString("dd/MM/yyyy")</div>
                                <div class="stat-label">Oluþturulma</div>
                            </div>
                        </div>
                    </div>
                    <div class="card-footer bg-white d-flex justify-content-between align-items-center">
                        <a asp-action="Details" asp-route-id="@item.Building.Id" class="btn btn-sm btn-outline-primary">
                            Detaylarý Gör
                        </a>

                        <div class="dropdown">
                            <button class="btn btn-sm btn-icon" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                <i class="fas fa-ellipsis-v"></i>
                            </button>
                            <div class="dropdown-menu dropdown-menu-right shadow animated--fade-in" aria-labelledby="dropdownMenuButton">
                                @if (item.Role == "Yönetici" || User.IsInRole("SuperAdmin"))
                                {
                                <a class="dropdown-item" asp-action="Edit" asp-route-id="@item.Building.Id">
                                    <i class="fas fa-edit mr-2"></i>Düzenle
                                </a>
                                }

                                <a class="dropdown-item" asp-action="List" asp-controller="Units" asp-route-buildingId="@item.Building.Id">
                                    <i class="fas fa-building mr-2"></i>Birimleri Gör
                                </a>
                                <a class="dropdown-item" asp-action="Index" asp-controller="Income" asp-route-buildingId="@item.Building.Id">
                                    <i class="fas fa-coins mr-2"></i>Gelirler
                                </a>
                                <a class="dropdown-item" asp-action="Index" asp-controller="Expense" asp-route-buildingId="@item.Building.Id">
                                    <i class="fas fa-coins mr-2"></i>Giderler
                                </a>
                                <a class="dropdown-item" asp-action="Index" asp-controller="Complaint" asp-route-buildingId="@item.Building.Id">
                                    <i class="fas fa-exclamation-circle mr-2"></i>Þikayetler
                                </a>
                                <a class="dropdown-item" asp-action="Index" asp-controller="DuesSettings" asp-route-buildingId="@item.Building.Id">
                                    <i class="fas fa-exclamation-circle mr-2"></i>Aidat
                                </a>
                                <a class="dropdown-item" asp-action="BuildingDues" asp-controller="DuesSettings" asp-route-buildingId="@item.Building.Id">
                                    <i class="fas fa-exclamation-circle mr-2"></i>Aidat Ödemeleri
                                </a>

                                @if (item.Role == "Yönetici" || User.IsInRole("SuperAdmin"))
                                {
                                <div class="dropdown-divider"></div>
                                <a class="dropdown-item text-danger" asp-action="Delete" asp-route-id="@item.Building.Id">
                                    <i class="fas fa-trash-alt mr-2"></i>Sil
                                </a>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
        </div>

        @if (!Model.Any())
    {
        <div class="text-center py-5">
            <i class="fas fa-building fa-4x text-gray-400 mb-3"></i>
            <h4 class="text-gray-500">Henüz bir bina eklenmemiþ</h4>
            <p class="text-muted">Yeni bir bina eklemek için aþaðýdaki butonu kullanabilirsiniz</p>
            <a asp-action="Create" class="btn btn-primary mt-3">
                <i class="fas fa-plus mr-2"></i> Yeni Bina Ekle
            </a>
        </div>
    }
    </div>

    @section Styles {
        <link href="~/vendor/fontawesome-free/css/all.min.css" rel="stylesheet">
        <style>
            .building-card {
                transition: all 0.3s ease;
                border-radius: 10px;
                overflow: hidden;
            }

                .building-card:hover {
                    transform: translateY(-5px);
                    box-shadow: 0 10px 20px rgba(0,0,0,0.1);
                }

            .card-img-container {
                height: 180px;
                overflow: hidden;
            }

                .card-img-container img {
                    object-fit: cover;
                    width: 100%;
                    height: 100%;
                    transition: transform 0.5s ease;
                }

            .building-card:hover .card-img-container img {
                transform: scale(1.05);
            }

            .card-img-top.bg-gradient-primary {
                background: linear-gradient(135deg, #4e73df 0%, #224abe 100%);
                height: 180px;
            }

            .building-badge {
                position: absolute;
                top: 15px;
                right: 15px;
            }

                .building-badge .badge {
                    font-size: 12px;
                    font-weight: 600;
                    padding: 5px 10px;
                    border-radius: 20px;
                    box-shadow: 0 2px 5px rgba(0,0,0,0.1);
                }

            .card-title {
                font-weight: 600;
                color: #2e3d4f;
            }

            .building-stats {
                font-size: 0.9rem;
            }

            .stat-value {
                font-weight: 700;
                color: #4e73df;
                font-size: 1.1rem;
            }

            .stat-label {
                color: #6c757d;
                font-size: 0.75rem;
                text-transform: uppercase;
            }

            .btn-icon {
                width: 32px;
                height: 32px;
                display: flex;
                align-items: center;
                justify-content: center;
                border-radius: 50%;
                color: #6c757d;
                transition: all 0.2s;
            }

                .btn-icon:hover {
                    background-color: #f8f9fa;
                    color: #4e73df;
                }

            .dropdown-menu {
                border: none;
                box-shadow: 0 0.5rem 1.5rem rgba(0,0,0,0.1);
                border-radius: 8px;
                padding: 0.5rem 0;
            }

            .dropdown-item {
                padding: 0.5rem 1.5rem;
                font-size: 0.85rem;
                transition: all 0.2s;
            }

                .dropdown-item:hover {
                    background-color: #f8f9fa;
                    color: #4e73df;
                }

            .dropdown-divider {
                margin: 0.25rem 0;
            }

            .empty-state {
                background-color: #f8f9fa;
                border-radius: 10px;
                padding: 3rem;
            }
        </style>
    }

    @section Scripts {
        <script>
    $(document).ready(function() {
    $('.building-card').on('click', function(e) {
        if (!$(e.target).closest('.dropdown, .btn').length) {
            const detailsLink = $(this).find('a[href*="Details"]').first();
            if (detailsLink.length) {
                window.location.href = detailsLink.attr('href');
            }
        }
    }).css('cursor', 'pointer');
});
        </script>
    }
